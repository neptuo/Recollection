@using Neptuo;

<div class="alert @ModeCssClass" role="alert">
    @if (IsDismissible)
    {
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    }

    @if (Title != null)
    {
        <strong>
            @Title
        </strong>
    }
    
    @if (Message != null)
    {
        <span>
            @Message
        </span>
    }

    @if (Messages != null)
    {
        foreach (string message in Messages)
        {
            <div>
                @message
            </div>
        }
    }
</div>

@functions 
{
    [Parameter]
    protected string Title { get; set; }

    [Parameter]
    protected string Message { get; set; }

    [Parameter]
    protected IEnumerable<string> Messages { get; set; }

    private bool isDismissible;

    [Parameter]
    protected bool IsDismissible
    {
        get => isDismissible;
        set
        {
            if (isDismissible != value)
            {
                isDismissible = value;
                UpdateModeCssClass();
            }
        }
    }

    private AlertMode mode;

    [Parameter]
    protected AlertMode Mode
    {
        get => mode;
        set
        {
            if (mode != value)
            {
                mode = value;
                UpdateModeCssClass();
            }
        }

    }

    protected string ModeCssClass { get; set; }

    protected override void OnInit()
    {
        base.OnInit();
        UpdateModeCssClass();
    }

    protected void UpdateModeCssClass()
    {
        switch (mode)
        {
            case AlertMode.Success:
                ModeCssClass = "alert-success";
                break;
            case AlertMode.Info:
                ModeCssClass = "alert-info";
                break;
            case AlertMode.Warning:
                ModeCssClass = "alert-warning";
                break;
            case AlertMode.Error:
                ModeCssClass = "alert-danger";
                break;
            default:
                throw Ensure.Exception.NotSupported(mode.ToString());
        }

        if (IsDismissible)
        {
            ModeCssClass += " alert-dismissible";
        }
    }

}