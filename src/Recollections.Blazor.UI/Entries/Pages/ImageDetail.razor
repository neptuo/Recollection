@page "/entry/{EntryId}/image/{ImageId}"

@if (Model != null)
{
    <div class="image-detail">
        <h2 class="title">
            <InlineTextEdit Value="@Model.Name" PlaceHolder="Unnamed image..." ValueChanged="@(async value => await SaveNameAsync(value))" />
        </h2>
        <div class="datetime">
            <InlineDateEdit Value="@Model.When" ValueChanged="@(async value => await SaveWhenAsync(value))" Format="@UiOptions.DateFormat" />
        </div>
        <div class="gps">
            <MapToggle ToggleChanged="@GetMapDescription">
                <Neptuo.Recollections.Components.Map Markers="@Markers" MarkersChanged="@(async () => await SaveLocationAsync())" />
            </MapToggle>
        </div>
        <div class="text">
            <InlineMarkdownEdit Value="@Model.Description" PlaceHolder="No description..." ValueChanged="@(async value => await SaveDescriptionAsync(value))" />
        </div>
        <EntryImage EntryId="@EntryId" Image="@Model" ImageType="@ImageType.Preview" />

        <ActionPanel>

            <button type="button" class="btn btn-sm btn-light" @onclick="@(async () => await DownloadOriginalAsync())" title="Download Original Image">
                <Icon Identifier="cloud-download" />
                Download Original
            </button>
            <button type="button" class="btn btn-sm btn-light" @onclick="@(async () => await SetLocationOriginalAsync())" title="Set Location from Original Image">
                <Icon Prefix="fas" Identifier="location-arrow" />
                Set Location from Original
            </button>
            <button type="button" class="btn btn-sm btn-danger" @onclick="@(async () => await DeleteAsync())" title="Delete Image">
                <Icon Identifier="trash-alt" />
                Delete Image
            </button>

        </ActionPanel>
    </div>
}
