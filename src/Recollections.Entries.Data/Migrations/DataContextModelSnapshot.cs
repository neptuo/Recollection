// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Neptuo.Recollections.Entries;

namespace Neptuo.Recollections.Entries.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Neptuo.Recollections.Entries.Entry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.Property<DateTime>("When");

                    b.HasKey("Id");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("Neptuo.Recollections.Entries.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<string>("EntryId");

                    b.Property<string>("FileName");

                    b.Property<string>("Name");

                    b.Property<DateTime>("When");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Neptuo.Recollections.Entries.Entry", b =>
                {
                    b.OwnsMany("Neptuo.Recollections.Entries.OrderedLocation", "Locations", b1 =>
                        {
                            b1.Property<string>("EntryId");

                            b1.Property<int>("Order");

                            b1.Property<double?>("Altitude");

                            b1.Property<double?>("Latitude");

                            b1.Property<double?>("Longitude");

                            b1.HasKey("EntryId", "Order");

                            b1.ToTable("EntriesLocations");

                            b1.HasOne("Neptuo.Recollections.Entries.Entry")
                                .WithMany("Locations")
                                .HasForeignKey("EntryId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Neptuo.Recollections.Entries.Image", b =>
                {
                    b.HasOne("Neptuo.Recollections.Entries.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId");

                    b.OwnsOne("Neptuo.Recollections.Entries.Location", "Location", b1 =>
                        {
                            b1.Property<string>("ImageId");

                            b1.Property<double?>("Altitude");

                            b1.Property<double?>("Latitude");

                            b1.Property<double?>("Longitude");

                            b1.HasKey("ImageId");

                            b1.ToTable("Images");

                            b1.HasOne("Neptuo.Recollections.Entries.Image")
                                .WithOne("Location")
                                .HasForeignKey("Neptuo.Recollections.Entries.Location", "ImageId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
